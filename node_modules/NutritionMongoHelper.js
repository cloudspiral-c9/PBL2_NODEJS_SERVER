
var MongoClient = require('mongodb').MongoClient;
var deferred = require('deferred');


var NutritionMongoHelper = {

	getNutritionByFoodNames: function(foodNames) {

		var def = deferred();
		var helper = this;

		MongoClient.connect('mongodb://localhost/recipeer', function(err, db) {

			if (err) {
				throw err;
			}

			if (!foodNames) {
				return null;
			}

			var query = helper._makeQuery(foodNames);
			console.log(query);
			
			var collection = db.collection('nutrition');
			var cursor = collection.find(query);

			var result = new Array();
			cursor.each (function(err, doc) {
				
				if (doc == null) {
					var jsonResult = JSON.stringify(result);
					def.resolve(jsonResult);
					db.close();
				} else {
					result.push(doc);
				}

			});
		});

		return def.promise;
	},

	_makeQuery: function(foodNames) {

		var orArray = new Array();
		switch (typeof(foodNames)) {

			case 'string':
				orArray.push({'name': foodNames});
				break

			case 'object':
				for (var i = 0; i < foodNames.length; i++) {
					orArray.push({'name': foodNames[i]});
				}
				break;

			default:
				break;

		}			
		
		var query = {'$or': orArray};
		return query;
	}

}

//外部モジュールにメソッドを公開
exports.NutritionMongoHelper = NutritionMongoHelper
