
var mongo = require('mongodb');


///設定をしてdbオブジェクトを作成
function createConnection() {
	
	//サーバ情報を記述するオブジェクト
	var hostname = 'localhost';
	var port = 27017;
	var server = new mongo.Server(hostname, port);

	//dbオブジェクト
	var dbname = 'recipeer';
	var db = new mongo.Db(dbname, server, {safe: true});

	//データベースのオープン
	db.open(function(err, db) {
		if (err) {
			throw err;
		}
	});

	console.log("Connect MongoDB - Success"); 
	return db;
}

//栄養価を食物の名前から検索
function getNutritionsByFoodNames(foodNames) {

	var db = createConnection();
	var nutrition = db.collection('nutrition');
	
	var cursor = nutrition.find();
	cursor.each(function(err, doc) {
		console.log(doc);
	});
	
	if (!foodNames) {
		return null;
	}

	result = makeResult(foodNames, nutrition);

	db.close();
	return result;
}

//foodNamesからfindのorの条件を作成
function makeCondition(foodNames) {

	var valType = typeof(foodNames);
	var conditions = new Array();
	switch (valType) {

		case 'string':
			conditions.push({'name': foodNames});
			break;

		case 'object':
			for (var i = 0; i < foodNames.length; i++) {
				conditions.push({'name': foodNames[i]});
			}
			break;

		default: 
			break;		
	}
	
	return conditions;
}

//foodNamesがObjectの場合にresponseに含める結果を作成
function makeResult(foodNames, nutrition) {

	var conditions = makeCondition(foodNames);
	var query = {'$or': conditions}
	var cursor = nutrition.find(query, {_id: false});
	
	console.log(query);
	var result = new Array();
	cursor.each(function(err, doc) {
		result.push(doc);
		console.log(doc);
	});

	return result;
}


//外部モジュールにメソッドを公開
exports.getNutritionsByFoodNames = getNutritionsByFoodNames;
