
var mongo = require('mongodb');


///設定をしてdbオブジェクトを作成
function createConnection() {
	
	console.log("Connect MongoDB - Success"); 	

	//サーバ情報を記述するオブジェクト
	var hostname = 'localhost';
	var port = 27017;
	var server = new mongo.Server(hostname, port);

	//dbオブジェクト
	var dbname = 'recipeer';
	var db = new mongo.Db(dbname, server, {safe: true});

	//データベースのオープン
	db.open(function(err, db) {
		if (err) {
			throw err;
		}
	});

	return db;
}

//栄養価を食物の名前から検索
function getNutritionsByFoodNames(foodNames) {

	var valType = typeof(foodNames);
	var result;
	switch (valTypes) {
		
		case 'string':
			result = db.nutrition.findeOne({'name': foodName});
			break;

		case 'object':
			result = makeResultForMultiple(foodNames);
			break;
		
		default: 
			result = null;
			break;
	}

	return result;
}

//foodNamesからfindのorの条件を作成
function makeOrConditions(foodNames) {
	
	var conditions = new Array();
	for (var i = 0; i < foodNames.length; i++) {
		conditions.push({'name': foodNames[i]});
	}
	
	return conditions;
}

//foodNamesがObjectの場合にresponseに含める結果を作成
function makeResultForMultiple(foodNames) {
	
	if (!foodNames) {
		return null;
	}

	var conditions = makeOrConditions(foodNames);
	var cursor = db.nutrition.find({'$or': conditions});
	
	var result = new Array();
	cursor.each(function(err, doc) {
		result.push(doc);
	});

	return result;
}

//dbオブジェクトを作成
var db = createConnection();

//外部モジュールにメソッドを公開
exports.getNutritionsByFoodNames = getNutritionsByFoodNames;
