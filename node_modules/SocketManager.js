
var socketIO = require('socket.io');
var fs = require('fs');

var SocketManager = {
	
	io: null,
	namespaces: new Array(),

	activateSocket: function(server) {
		this._listen(server);
		this._loadRouteModules();
	},

	_listen: function(server) {
		this.io = socketIO.listen(server);
	},

	_loadRouteModules: function() {
		
		var readPath = '../socket_event_modules';
		var fileNames = fs.readdirSync(readPath);
		var moduleNames = fileNames.filter(function(fileName) {
			return fs.statSync(fileName).isFile() && /.js$/.test(fileName);
		});

		var that = this;
		moduleNames.forEach(function(moduleName) {
			
			var module = require(moduleName);
			
			var ns = module.ns;
			if (this.namespaces.indexOf(ns) != -1) {
				throw 'Already Exist ' + ns;
			}
			this.namespaces.push(ns);

			var subIO = io.of(ns);
			module.io = subIO;

			var eventHandlerMap = module.eventHandlerMap;
			Object.keys(eventHandlerMap).forEach(function(eventName) {
				subIO.on(eventName, eventHandlerMap[eventName]);
			});
		});
	},
};

exports = SocketManager;